
apiVersion: v1
kind: Secret
metadata:
  name: user-service-secret
  namespace: food-ordering-system
type: Opaque
data:
  jwt-secret: WW91clN1cGVyU2VjcmV0S2V5VGhhdElzQXRMZWFzdDMyQ2hhcmFjdGVyc0xvbmch
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-config
  namespace: food-ordering-system
data:
  ConnectionStrings__DefaultConnection: "Host=postgres-service;Database=UserDb;Username=postgres;Password=postgres"
  JwtSettings__Issuer: "FoodOrderingSystem"
  JwtSettings__Audience: "FoodOrderingSystem"
  JwtSettings__ExpiryInHours: "24"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: food-ordering-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: user-services:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_URLS
          value: "http://+:8080"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: ConnectionStrings__DefaultConnection
        - name: JwtSettings__SecretKey
          valueFrom:
            secretKeyRef:
              name: user-service-secret
              key: jwt-secret
        - name: JwtSettings__Issuer
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: JwtSettings__Issuer
        - name: JwtSettings__Audience
          valueFrom:
            configMapKeyRef:
              name: user-service-config
              key: JwtSettings__Audience
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: food-ordering-system
spec:
  selector:
    app: user-service
  ports:
  - port: 8080
    targetPort: 8080 

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-service-hpa
  namespace: food-ordering-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80